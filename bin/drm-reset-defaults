#!/bin/bash

# Sets up default configuration of build scripts.

# auxiliary function to print out usage help
usage()
{
    cat <<EOF
Restores configuration of custom scripts.

BEWARE: THIS WILL DELETE ALL FILES PRESENT IN scripts/enabled DIRECTORY!

Usage: $0 [options]

Options:

  --help                      print this help

EOF
}

# parse arguments
for arg in "$@"; do
  arg_consumed=
  if echo $arg | grep "^--help" > /dev/null 2> /dev/null; then
    usage
    exit 0
  fi
  if [ "x${arg_consumed}" == "x" ]; then
    echo "Unknown argument: \"${arg}\""
    echo
    usage
    exit 1
  fi
done

# determine script working directory
wd="`echo $0 | sed -n '/\//{s/\/[^\/]*$//;p;}'`"
wd="`(cd "${wd}/..";pwd)`"

# clean enabled scripts
rm ${wd}/scripts/enabled/* > /dev/null 2> /dev/null

# restore defaults
cd ${wd}/scripts/enabled
ln -s -v ../available/locale-en-gb-utf8.sh 10_locale-en-gb-utf8.sh
ln -s -v ../available/devel-cpp.sh 20_devel-cpp.sh
ln -s -v ../available/environment-vim.sh 30_environment-vim.sh
ln -s -v ../available/users-default.sh 40_users-default.sh
ln -s -v ../available/users-custom.sh 50_users-custom.sh


# vim: set ts=2 sw=2 et:


