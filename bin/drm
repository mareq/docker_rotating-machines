#!/bin/bash

# constants
export drm_program_name="${0##*/}"
export drm_program_version="v0.2.0"

# auxiliary function to print out usage help
function drm_usage()
{
    cat <<EOF
Docker "rotating machines" manager.

Usage: ${drm_program_name} <command> [options]
   or: ${drm_program_name} --help
   or: ${drm_program_name} --version

Commands: (defaults in [brackets] after descriptions)

  help [<command>]            display help for specified command
                              [display this general help]

  buid                        create new Docker image for
                              "rotating machine"

  start                       create new Docker container

  reset                       restore configuration of custom scripts

Options:

  -h, --help                  print this help

  -v, --version               print version

  --verbose                   produce verbose output

  Each command accepts its own specific options. See command-specific
  help for more information.
EOF
}

# parameter (default) values
drm_command=
drm_verbose=
drm_options=()

# parse arguments
if echo ${1} | grep "^[a-zA-Z][a-zA-Z]*"$ > /dev/null 2> /dev/null; then
  drm_command="${1}"
  shift
  if [ "${drm_command}" == "help" ]; then
    if echo ${1} | grep "^[a-zA-Z][a-zA-Z]*"$ > /dev/null 2> /dev/null; then
      drm_options=("--help")
      drm_command="${1}"
      shift
    else
      drm_usage
      exit 0
    fi
  fi
fi
for drm_arg in "${@}"; do
  case ${drm_arg} in
    -h | --help)
      drm_usage
      exit 0
      ;;
    -v | --version)
      echo "${drm_program_name} ${drm_program_version}"
      exit 0
      ;;
    --verbose)
      drm_verbose=true
      if [ ${#drm_options} -gt 0 ]; then
        drm_arg=" ${drm_arg}"
      fi
      drm_options+="${drm_arg}"
      ;;
    *)
      if [ ${#drm_options} -gt 0 ]; then
        drm_arg=" ${drm_arg}"
      fi
      drm_options+="${drm_arg}"
      ;;
  esac
done

# check command
if [ "x${drm_command}" == "x" ]; then
  echo "${drm_program_name}: Command must be specified"
  echo
  drm_usage
  exit 1
fi

# determine script path
drm_path=`dirname "${0}"`

# export script working directory
drm_wd="`echo ${0} | sed -n '/\//{s/\/[^\/]*$//;p;}'`"
drm_wd="`(cd "${drm_wd}/..";pwd)`"
export drm_wd
if [ "x${drm_verbose}" != "x" ]; then
  echo "${drm_program_name}: Working directory: ${drm_wd}"
fi

# call specified script
eval "${drm_path}/../usr/libexec/drm-${drm_command} ${drm_options}"


# vim: set ts=2 sw=2 et:


